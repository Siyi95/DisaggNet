# 完整的NILM训练配置文件
# 包含预训练、微调和数据增强的所有参数

# 数据配置
data:
  data_path: '/home/yu/Workspace/DisaggNet/nilm-mscat/data/AMPds2.h5'
  window_length: 128
  step_size: 32
  batch_size: 16
  num_workers: 4
  power_threshold: 10.0
  augment: true
  min_samples: 200

# 预训练配置
pretrain:
  input_dim: 12  # 多通道特征维度
  d_model: 128
  nhead: 8
  num_layers: 6
  dim_feedforward: 512
  dropout: 0.1
  mask_ratio: 0.15  # 掩码比例
  learning_rate: 0.001
  weight_decay: 0.0001
  max_epochs: 30
  patience: 10

# 微调配置
finetune:
  input_dim: 12
  num_devices: 10
  device_names:
    - 'device_01'
    - 'device_02'
    - 'device_03'
    - 'device_04'
    - 'device_05'
    - 'device_06'
    - 'device_07'
    - 'device_08'
    - 'device_09'
    - 'device_10'
  d_model: 128
  nhead: 8
  num_layers: 6
  dim_feedforward: 512
  dropout: 0.1
  power_loss_weight: 1.0
  event_loss_weight: 0.5
  use_crf: false
  freeze_encoder: true  # 初始冻结编码器
  encoder_lr: 0.0001    # 编码器学习率
  head_lr: 0.001        # 头部学习率
  weight_decay: 0.0001
  max_epochs: 50
  patience: 15
  # 功率损失稳定化参数
  power_loss_smoothing: 0.1
  gradient_clip_val: 1.0
  power_scale_factor: 1000.0

# 训练配置
training:
  accelerator: 'gpu'  # 'gpu' 或 'cpu'
  devices: 1
  precision: 16
  accumulate_grad_batches: 2
  log_every_n_steps: 50
  val_check_interval: 0.25

# 输出配置
output:
  save_dir: './outputs'
  experiment_name: 'nilm_complete_training'
  save_top_k: 3

# 数据增强配置（在data_augmentation.py中定义）
augmentation:
  noise_std: 0.01
  scale_range: [0.8, 1.2]
  jitter_std: 0.5
  dropout_prob: 0.1
  freq_shift_range: [-2, 2]
  mixup_alpha: 0.2
  cutmix_alpha: 1.0
  
  # 增强概率分布
  probabilities:
    gaussian_noise: 0.2
    amplitude_scaling: 0.2
    time_jitter: 0.1
    channel_dropout: 0.1
    frequency_shift: 0.1
    synthetic_overlay: 0.1
    mixup: 0.1
    cutmix: 0.1