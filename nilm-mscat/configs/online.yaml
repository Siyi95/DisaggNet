# 在线TCN检测配置文件

# 随机种子
seed: 42

# 数据配置
data:
  data_path: "data/AMPds2.h5"
  
  # 特征配置（与主模型保持一致）
  features:
    base_channels: ["P_total", "Q_total", "S_total", "I", "V", "PF"]
    derived_features:
      enable_delta: true
      enable_rolling_stats: true
      enable_energy: true
      enable_frequency: true
      enable_time_features: true
    rolling_windows: [3, 5, 10]
    frequency_bands: 3
  
  # 归一化（使用与训练时相同的统计量）
  normalization:
    method: "robust"
    per_channel: true
    load_stats_from: "outputs/finetune/normalization_stats.pkl"  # 加载训练时的统计量
  
  # 在线处理参数
  window_size: 120             # 因果窗口大小（分钟）
  batch_size: 1                # 在线处理批次大小
  buffer_size: 120             # 滚动缓冲区大小（分钟）

# TCN模型配置
tcn_model:
  # 输入输出维度
  input_dim: 11                # 输入特征维度
  output_dim: 7                # 输出设备数量
  device_names: ["DWE", "FRE", "HPE", "WOE", "CDE", "GRE", "FGE"]
  
  # TCN架构参数
  architecture:
    input_dim: 11                 # 输入特征维度
    output_dim: 7                 # 输出设备数量
    num_channels: [64, 64, 64, 64, 64, 64]  # 每层通道数
    kernel_size: 3                # 卷积核大小
    dropout: 0.1                  # Dropout率
    dilation_base: 2              # 膨胀基数
    num_layers: 6                 # TCN层数（感受野 ≈ 2^6 * 3 = 192 分钟）
    activation: "relu"            # 激活函数
    use_skip_connections: true    # 是否使用跳跃连接
    use_batch_norm: true          # 是否使用批归一化
    output_activation: "sigmoid"  # 输出激活函数
  
  # 优化器参数
  optimizer:
    learning_rate: 1e-3
    weight_decay: 1e-4
    name: "AdamW"
  
  # 知识蒸馏参数
  distillation:
    enable: true
    teacher_model_path: "outputs/finetune/checkpoints/nilm_best.ckpt"
    temperature: 3.0
    alpha: 0.4                 # 蒸馏损失权重
    
  # 损失函数
  loss:
    type: "bce"             # bce, focal
    focal_alpha: 0.25
    focal_gamma: 2.0

# 在线检测配置
online_detection:
  # 检测阈值
  detection_threshold: 0.5
  
  # 最小持续时间过滤
  min_on_duration: 3           # 最小开启持续时间（分钟）
  min_off_duration: 2          # 最小关闭持续时间（分钟）
  
  # 缓冲区配置
  buffer_size: 120             # 缓冲区大小（分钟）
  update_interval: 1           # 更新间隔（分钟）
  
  # 事件检测
  event_detection:
    enable: true
    confidence_threshold: 0.7   # 事件置信度阈值
    debounce_time: 2            # 防抖时间（分钟）
  
  # 状态平滑
  state_smoothing:
    enable: true
    method: "majority_vote"     # majority_vote, exponential_smoothing
    window_size: 5              # 平滑窗口大小
    alpha: 0.3                  # 指数平滑参数

# 训练配置（用于TCN训练）
training:
  max_epochs: 50
  early_stopping_patience: 10
  gradient_clip_val: 1.0
  
  # 验证配置
  val_check_interval: 1.0
  log_every_n_steps: 20
  
  # 检查点配置
  checkpoint:
    monitor: "val/f1_macro"
    mode: "max"
    save_top_k: 3
    save_last: true
    filename: "tcn_online_{epoch:02d}_{val/f1_macro:.4f}"

# 硬件配置
hardware:
  device: "auto"               # auto, cpu, cuda
  precision: "32"              # 在线推理使用32位精度

# 日志配置
logging:
  level: "INFO"                # DEBUG, INFO, WARNING, ERROR
  log_file: "online_detection.log"
  
  # 事件日志
  event_logging:
    enable: true
    log_file: "events.log"
    format: "json"             # json, csv
  
  # 统计日志
  stats_logging:
    enable: true
    interval: 60               # 统计记录间隔（秒）
    log_file: "stats.log"

# 性能监控
monitoring:
  # 系统监控
  system_monitoring:
    enable: true
    cpu_threshold: 80          # CPU使用率阈值（%）
    memory_threshold: 80       # 内存使用率阈值（%）
    
  # 模型性能监控
  model_monitoring:
    enable: true
    latency_threshold: 100     # 延迟阈值（毫秒）
    accuracy_threshold: 0.8    # 准确率阈值
    
  # 数据质量监控
  data_monitoring:
    enable: true
    missing_data_threshold: 0.1  # 缺失数据阈值
    outlier_threshold: 3.0     # 异常值阈值（标准差倍数）

# 输出配置
output:
  # 结果保存
  save_results: true
  output_dir: "outputs/online"
  
  # 实时输出
  real_time_output:
    enable: true
    format: "json"             # json, csv
    include_probabilities: true
    include_raw_features: false
  
  # 可视化
  visualization:
    enable: false              # 在线模式通常不需要可视化
    update_interval: 300       # 可视化更新间隔（秒）

# API配置（如果需要提供API服务）
api:
  enable: false
  host: "0.0.0.0"
  port: 8000
  
  # 认证
  authentication:
    enable: false
    api_key: null
  
  # 限流
  rate_limiting:
    enable: true
    requests_per_minute: 60

# 数据源配置
data_source:
  # 模拟数据源（用于测试）
  simulation:
    enable: true
    speed_factor: 60.0         # 加速因子（60倍速）
    start_index: 0
    max_samples: 1000
  
  # 实时数据源（实际部署时使用）
  real_time:
    enable: false
    source_type: "mqtt"        # mqtt, kafka, websocket, serial
    
    # MQTT配置
    mqtt:
      broker: "localhost"
      port: 1883
      topic: "nilm/power_data"
      qos: 1
    
    # Kafka配置
    kafka:
      bootstrap_servers: ["localhost:9092"]
      topic: "power_data"
      group_id: "nilm_consumer"
    
    # 串口配置
    serial:
      port: "/dev/ttyUSB0"
      baudrate: 9600
      timeout: 1

# 故障恢复配置
fault_tolerance:
  # 自动重启
  auto_restart:
    enable: true
    max_retries: 3
    retry_delay: 5             # 重试延迟（秒）
  
  # 数据备份
  data_backup:
    enable: true
    backup_interval: 3600      # 备份间隔（秒）
    max_backup_files: 24       # 最大备份文件数
  
  # 健康检查
  health_check:
    enable: true
    check_interval: 30         # 检查间隔（秒）
    timeout: 10                # 超时时间（秒）